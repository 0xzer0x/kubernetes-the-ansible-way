- name: Add required modules to /etc/modules-load.d
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s.conf
    mode: "644"
    content: |
      overlay
      br_netfilter

- name: Load kernel modules
  loop:
    - overlay
    - br_netfilter
  community.general.modprobe:
    state: present
    name: "{{ item }}"

- name: Create sysctl configuration file
  ansible.builtin.file:
    state: touch
    path: /etc/sysctl.d/k8s.conf
    mode: "644"

- name: Add module parameters to sysctl configuration file
  loop_control:
    extended: true
  loop:
    - key: net.bridge.bridge-nf-call-iptables
      value: 1
    - key: net.bridge.bridge-nf-call-ip6tables
      value: 1
    - key: net.ipv4.ip_forward
      value: 1
  ansible.builtin.sysctl:
    state: present
    sysctl_file: /etc/sysctl.d/k8s.conf
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    reload: "{{ ansible_loop.index == ansible_loop.length }}"

# - name: Install container runtime and networking plugins
#   ansible.builtin.apt:
#     update_cache: true
#     name:
#       - containerd
#       - ipvsadm
#       - ipset
#
# - name: Install CNI plugins
#   block:
#     - name: Create CNI directory
#       ansible.builtin.file:
#         state: directory
#         path: /opt/cni/bin
#         mode: "755"
#     - name: Download CNI plugins
#       ansible.builtin.unarchive:
#         remote_src: true
#         src: https://github.com/containernetworking/plugins/releases/download/v1.5.1/cni-plugins-linux-amd64-v1.5.1.tgz
#         dest: /opt/cni/bin

- name: Configure containerd
  block:
    - name: Create /etc/containerd if it does not exist
      ansible.builtin.file:
        state: directory
        path: /etc/containerd
        mode: "755"
    - name: Generate default containerd config
      changed_when: false
      ansible.builtin.command: containerd config default
      register: containerd_config
    - name: Add /etc/containerd/config.toml
      ansible.builtin.copy:
        content: "{{ containerd_config.stdout }}"
        dest: /etc/containerd/config.toml
        mode: "644"
    - name: Modify config to use system cgroup
      ansible.builtin.lineinfile:
        state: present
        path: /etc/containerd/config.toml
        regexp: "^(.*)SystemdCgroup = false"
        line: '\1SystemdCgroup = true'
        backrefs: true
    - name: Restart containerd service
      ansible.builtin.service:
        state: restarted
        name: containerd
