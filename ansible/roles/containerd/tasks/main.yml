- name: Load kernel modules
  loop:
    - overlay
    - br_netfilter
  community.general.modprobe:
    state: present
    name: "{{ item }}"

- name: Install container runtime
  ansible.builtin.apt:
    update_cache: "{{ apt_update }}"
    name:
      - containerd
      - ipvsadm
      - ipset

- name: Install CNI plugins
  when: install_cni == True
  block:
    - name: Create CNI directory
      ansible.builtin.file:
        state: directory
        path: /opt/cni/bin
        mode: "755"

    - name: Download CNI plugins
      ansible.builtin.unarchive:
        remote_src: true
        src: https://github.com/containernetworking/plugins/releases/download/{{ cni_version }}/cni-plugins-linux-amd64-{{ cni_version }}.tgz
        dest: /opt/cni/bin

- name: Configure containerd
  block:
    - name: Create /etc/containerd if it does not exist
      ansible.builtin.file:
        state: directory
        path: /etc/containerd
        mode: "755"

    - name: Generate default containerd config
      changed_when: false
      ansible.builtin.command: containerd config default
      register: containerd_config

    - name: Add /etc/containerd/config.toml
      ansible.builtin.copy:
        content: "{{ containerd_config.stdout }}"
        dest: /etc/containerd/config.toml
        mode: "644"

    - name: Modify config to use system cgroup
      ansible.builtin.lineinfile:
        state: present
        backrefs: true
        path: /etc/containerd/config.toml
        regexp: "^(.*)SystemdCgroup = false"
        line: '\1SystemdCgroup = true'

    - name: Restart containerd service
      ansible.builtin.service:
        state: restarted
        name: containerd
