- name: Add required modules to /etc/modules-load.d
  ansible.builtin.copy:
    dest: /etc/modules-load.d/k8s.conf
    mode: "644"
    content: |
      overlay
      br_netfilter

- name: Load kernel modules
  loop:
    - overlay
    - br_netfilter
  community.general.modprobe:
    state: present
    name: "{{ item }}"

- name: Create sysctl configuration file
  ansible.builtin.file:
    state: touch
    path: /etc/sysctl.d/k8s.conf
    mode: "644"

- name: Add module parameters to sysctl configuration file
  loop_control:
    extended: true
  loop:
    - key: net.bridge.bridge-nf-call-iptables
      value: 1
    - key: net.bridge.bridge-nf-call-ip6tables
      value: 1
    - key: net.ipv4.ip_forward
      value: 1
  ansible.builtin.sysctl:
    state: present
    sysctl_file: /etc/sysctl.d/k8s.conf
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    reload: "{{ ansible_loop.index == ansible_loop.length }}"

- name: Add kubernetes apt repository
  vars:
    ver: '{{ k8s_version | regex_replace("v(\d+)\.(\d+)\.(\d+)", "v\1.\2") }}'
  block:
    - name: Download kubernetes gpg key
      ansible.builtin.get_url:
        url: "https://pkgs.k8s.io/core:/stable:/{{ ver }}/deb/Release.key"
        dest: /tmp/kubernetes-key.asc
        mode: "644"
    - name: Dearmor kubernetes gpg key
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      ansible.builtin.command:
        cmd: gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg /tmp/kubernetes-key.asc
    - name: Add apt repository
      ansible.builtin.apt_repository:
        state: present
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/{{ ver }}/deb/ /"

- name: Install container runtime and networking plugins
  ansible.builtin.apt:
    update_cache: true
    name:
      - containerd
      - kubernetes-cni
      - kubectl
      - ipvsadm
      - ipset

- name: Configure containerd
  block:
    - name: Create /etc/containerd if it does not exist
      ansible.builtin.file:
        state: directory
        path: /etc/containerd
        mode: "755"
    - name: Generate default containerd config
      changed_when: false
      ansible.builtin.command: containerd config default
      register: containerd_config
    - name: Add /etc/containerd/config.toml
      ansible.builtin.copy:
        content: "{{ containerd_config.stdout }}"
        dest: /etc/containerd/config.toml
        mode: "644"
    - name: Modify config to use system cgroup
      ansible.builtin.lineinfile:
        state: present
        path: /etc/containerd/config.toml
        regexp: "SystemdCgroup = false"
        line: "SystemCgroup = true"
    - name: Restart containerd service
      ansible.builtin.service:
        state: restarted
        name: containerd
